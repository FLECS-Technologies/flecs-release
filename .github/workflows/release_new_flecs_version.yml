name: Release new version
on:
  workflow_dispatch:
    inputs:
      core_version:
        description: New core version
        required: false
        type: string
      webapp_version:
        description: New webapp version
        required: false
        type: string
      core_branch:
        description: Branch for new core version
        required: false
        type: string
        default: main
      webapp_branch:
        description: Branch for new webapp version
        required: false
        type: string
        default: main
jobs:
  validate_inputs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Validate Inputs
        uses: ./.github/actions/validate-versions
        with:
          core_version: ${{ inputs.core_version }}
          webapp_version: ${{ inputs.webapp_version }}

  release_webapp:
    if: inputs.webapp_version != ''
    needs: [validate_inputs, generate_token]
    uses: FLECS-Technologies/flecs-release/.github/workflows/create_release.yml@main
    secrets: inherit
    with:
      name: webapp-dummy
      env_version: ${{ inputs.webapp_version }}
      env_branch: ${{ inputs.webapp_branch }}

  check_build_webapp:
    if: inputs.webapp_version != ''
    needs: release_webapp
    runs-on: ubuntu-latest
    steps:
      - name: simulated failure
        run: |
          exit 1
    #uses: ./.github/workflows/check_build_job.yml
    #with:
    #  name: webapp-dummy
    #  env_version: ${{ inputs.webapp_version }}

  #flecs_build_revision:
    #if: inputs.core_version != ''
    #needs: [generate_token, validate_inputs]
    #runs-on: ubuntu-latest
    #outputs:
    #  build_sha: ${{ steps.extract.outputs.build_sha }}
    #steps:
    #  - name: Checkout flecs-public
    #    uses: actions/checkout@v4
    #    with:
    #      repository: FLECS-Technologies/flecs-public
    #      ref: ${{ inputs.core_branch }}

    #  - name: Extract flecs-build submodule revision
    #    id: extract
    #    run: |
    #      git submodule update --init
    #      BUILD_SHA=$(git ls-tree HEAD flecs-build | awk '{print $3}')
    #      echo "build_sha=$BUILD_SHA" >> "$GITHUB_OUTPUT"

  #release_build:
  #  if: inputs.core_version != ''
  #  needs: [validate_inputs, generate_token, flecs_build_revision]
  #  uses: FLECS-Technologies/flecs-release/.github/workflows/create_release.yml@main
  #  with:
  #    name: build
  #    env_version: ${{ inputs.core_version }}
  #    env_branch: ${{ needs.flecs_build_revision.outputs.build_sha }}

  #check_build_build:
  #  if: inputs.core_version != ''
  #  needs: release_build
  #  uses: ./.github/workflows/check_build_job.yml
  #  with:
  #    name: build
  #    env_version: ${{ inputs.core_version }}

  release_public:
    if: inputs.core_version != ''
    needs: [validate_inputs, generate_token]
    uses: FLECS-Technologies/flecs-release/.github/workflows/create_release.yml@main
    secrets: inherit
    with:
      name: public-dummy
      env_version: ${{ inputs.core_version }}
      env_branch: ${{ inputs.core_branch }}

  check_build_public:
    if: inputs.core_version != ''
    needs: [release_public]
    uses: ./.github/workflows/check_build_job.yml
    with:
      name: public-dummy
      env_version: ${{ inputs.core_version }}

  increment_version_to_next_webapp:
    if: inputs.webapp_version != ''
    needs: [release_webapp, check_build_webapp, release_public, check_build_public]
    uses: FLECS-Technologies/flecs-release/.github/workflows/bump-version.yml@main
    secrets: inherit
    with:
      tag: ${{ inputs.webapp_version }}
      repo: webapp-dummy

  increment_version_to_next_public:
    if: inputs.core_version != ''
    needs: [release_webapp, check_build_webapp, release_public, check_build_public]
    uses: FLECS-Technologies/flecs-release/.github/workflows/bump-version.yml@main
    secrets: inherit
    with:
      tag: ${{ inputs.core_version }}
      repo: public-dummy

  delete_release_on_failure:
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Delete webapp release
        if: inputs.webapp_version != ''
        uses: ./.github/actions/delete-release-on-fail
        with:
          name: webapp-dummy
          tag: ${{ inputs.webapp_version }}

      #- name: Delete build release
      #  if: inputs.core_version != ''
      #  uses: ./.github/actions/delete-release-on-fail
      #  with:
      #    name: build
      #    tag: ${{ inputs.core_version }}

      - name: Delete public release
        if: inputs.core_version != ''
        uses: ./.github/actions/delete-release-on-fail
        with:
          name: public-dummy
          tag: ${{ inputs.core_version }}
